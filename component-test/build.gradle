/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        springBootVersion = '2.4.1'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.7")
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'org.nosphere.apache.rat' version '0.6.0'
    id 'com.jfrog.artifactory' version '4.18.2'
    id 'org.springframework.boot' version '2.4.1'
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id 'maven-publish'
    id 'java'
    id 'idea'
}

apply from: '../shared.gradle'
apply plugin: 'org.asciidoctor.convert'

bootJar {
    enabled = false
}

dependencies {
    compile(
            [group: 'org.apache.fineract.cn.accounting', name: 'api', version: project.version],
            [group: 'org.apache.fineract.cn.accounting', name: 'service', version: project.version],
            [group: 'org.apache.fineract.cn.accounting', name: 'importer', version: project.version],
            [group: 'org.apache.fineract.cn.anubis', name: 'test', version: versions.frameworkanubis],
            [group: 'org.apache.fineract.cn', name: 'api', version: versions.frameworkapi],
            [group: 'org.apache.fineract.cn', name: 'test', version: versions.frameworktest],
            [group: 'org.apache.fineract.cn', name: 'lang', version: versions.frameworklang],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.1'],
            [group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc'],
            [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0']
    )
}

asciidoctor {
    sourceDir 'build/doc/asciidoc/'
    outputDir 'build/doc/html5/'
    options backend: "html", doctype: "book"
    attributes "source-highlighter": "highlightjs", \
                'snippets': file('build/doc/generated-snippets/')
}

jar {
    enabled = true
}

publishing {
    publications {
        componentTest(MavenPublication) {
            from components.java
            version project.findProperty('externalVersion') ?: project.version
        }
    }
}
